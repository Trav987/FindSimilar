format short g; % set console to output human readable numbers

% Write the matrix X to the file FILENAME in comma-separated-value format.
% csvwrite (FILENAME, X, DLM_OPTS)

% This function is equivalent to
% dlmwrite (FILENAME, X, ",", ...)

% Write to delimited file
dlmwrite('image.csv', image, ';'); % works with Norwegian Excel

% Read the comma-separated-value file FILENAME into the matrix X.
X = csvread (FILENAME)
% X = csvread (FILENAME, DLM_OPTS)

% This function is equivalent to
X = dlmread (FILENAME, "," , ...)

% Print text
% Using disp (The output of disp depends on the format command.)
disp(x)

% Using printf
% The printf function displays its output on the screen. Use the sprintf to return the result in a string and fprintf to write to a file. Note that the fprintf requires one additional parameter to specify the file identifier.
printf(format, value, ...)
sprintf(format, value, ...)
fprintf(fid, format, value, ...)

octave:18> x = 10.1;
octave:19> y = 5.5;
octave:20> z = 'test';
octave:21> printf('An integer: %i. A real: %f. This is a %s.\n', x, y, z);
An integer: 10. A real: 5.500000. This is a test.

octave:22> x = 10.34;
octave:23> printf("x is a real number: %f (%e in scientific notation).\n", x, x);
x is a real number: 10.340000 (1.034000e+01 in scientific notation).
octave:24> printf("Write percentages as %i%%.\n", x);
Write percentages as 10%

% Read image
image = imread('C:\Users\perivar.nerseth\Pictures\lena_color.jpg');
image = double(image); 	% convert to double precision			
image = image(:,:,3); 	% if image has color, use only one of the rgb color's

% Display
% subplot (nrows,ncols,plot_number)
clf;
subplot(3,2,1);
imagesc(image_normalized);
title('original image');
colormap (gray);
axis image off;
set(gcf,'position', get(0,'screensize'));

% Write to Binary File
dct_f = fopen(dctfile, 'w');
fwrite(dct_f, size(dct, 1), 'int32');
fwrite(dct_f, size(dct, 2), 'int32');
fwrite(dct_f, dct', 'float32');
fclose(dct_f);

% Read from Binary File
dct_f = fopen(dctfile, 'r');
dct_nr = fread(dct_f, 1, 'int32');
dct_nc = fread(dct_f, 1, 'int32');
dct2 = fread(dct_f, [dct_nr, dct_nc], 'float32');
fclose(dct_f);

% comparing two-matrices
tf = abs((A-B)./B)<0.05
% This will return a logical matrix which will be true for each element if the relative difference between A and B 
% with respect to B is less than 5 percent.
% If you want to ask if all of these are true (they all satisfy the above condition):
all(tf(:))

% To normalize a matrix such that all values fall in the range [0, 1] use
%inorm = (image - min(image(:)))/(max(image(:)) - min(image(:)));
